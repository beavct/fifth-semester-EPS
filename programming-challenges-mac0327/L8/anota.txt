Aula 08/05 - Continuação de grafos

• DSU
    Problema: 
        É dado um conjunto de informações e de perguntas;
        ab! é uma informação: a e b estão no mesmo conjunto

        ab? é uma pergunta: considerando as informações anteriores, a e b estão no mesmo conjunto?

    Exemplo:
        1 2 ! 
        3 2 ! 
        4 5 !
        1 3 ? SIM
        1 5 ? NÃO 

        1 - 2
           /    
          3     4 - 5

        3 4 ! 
        1 5 ? SIM 

        1 - 2
           /    
          3 - 4 - 5

    Problema: Cada pergunta é uma DFS -> demorado

    - Técnica small to large: 
    A cada nova informação ir movendo os elementos para o conjunto
    Sempre que for dar "merge" entre dois conjuntos, mover os elementos do conjunto de menor cardinalidade para o de maior cardinalidade.
        - O(nlgn)

    - Em árvore:
    Cada elemento tem sua raiz/pai tabelada, a cada nova informação as árvores vão sendo juntas.    


    - DSU:
        - Representar os conjuntos como árvores enraizadas;
        - Cada elemento tem um pai, menos a raiz;
        - Operações:
            -- find(a): encontrar a raiz da árvore de a e retornar essa raiz;
            -- union(a,b)/join(a,b):  encontrar as raizes de a e b, se elas forem diferentes, colocar uma como filha da outra. 

• MST
    - Árvore geradoa de G:
        Uma árvore T (conexa e acíclica) com V(T)=V(G) e A(T) contida em A(G).
    - MST: 
        Árvore geradora de menor custo.

    Problema:
        Conectar todas as cidades com o menor custo possível.

    - Kruskal:
    Considerar as arestas em ordem de custo; se os vértices da aresta atual estiverem em componentes diferentes, colocamos a aresta na árvore.
        - Grafo conexo -> MST
        - Grafo não-conexo -> MSF (floresta)

• Aplicações